"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[475],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3215:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],s={sidebar_label:"rest-api",sidebar_position:2},l="rest-api",p={unversionedId:"templates/rest-api",id:"templates/rest-api",title:"rest-api",description:"A RESTful API with boilerplate routes to edit an in memory collection of users (explore the code)",source:"@site/docs/templates/rest-api.md",sourceDirName:"templates",slug:"/templates/rest-api",permalink:"/docs/templates/rest-api",editUrl:"https://github.com/Walrussuit101/create-express-app/tree/master/docs/docs/templates/rest-api.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"rest-api",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"static",permalink:"/docs/templates/static"},next:{title:"hello-world",permalink:"/docs/templates/hello-world"}},c={},u=[{value:"Quick Start",id:"quick-start",level:2},{value:"Scripts",id:"scripts",level:2},{value:"start",id:"start",level:3},{value:"dev",id:"dev",level:3},{value:"API Routes",id:"api-routes",level:2}],d={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"rest-api"},(0,o.kt)("inlineCode",{parentName:"h1"},"rest-api")),(0,o.kt)("p",null,"A RESTful API with boilerplate routes to edit an in memory collection of users (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Walrussuit101/create-express-app/tree/master/templates/rest-api"},"explore the code"),")"),(0,o.kt)("h2",{id:"quick-start"},"Quick Start"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx @walrussuit/create-express-app my-project rest-api --git\ncd my-project\nnpm start\n")),(0,o.kt)("h2",{id:"scripts"},"Scripts"),(0,o.kt)("p",null,"These are defined in ",(0,o.kt)("inlineCode",{parentName:"p"},"./package.json")),(0,o.kt)("h3",{id:"start"},"start"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm start\n")),(0,o.kt)("p",null,"This will start the API on localhost at port 8080 (unless you provide a ",(0,o.kt)("inlineCode",{parentName:"p"},"PORT")," environment variable)"),(0,o.kt)("h3",{id:"dev"},"dev"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm run dev\n")),(0,o.kt)("p",null,"This will re-start the API (using ",(0,o.kt)("a",{parentName:"p",href:"https://nodemon.io/"},"nodemon"),") on changes to any TypeScript or JSON file (hot-reloading)"),(0,o.kt)("h2",{id:"api-routes"},"API Routes"),(0,o.kt)("p",null,"To see all registered routes and their methods go to the root route of the server in a browser (",(0,o.kt)("a",{parentName:"p",href:"http://localhost:8080"},"http://localhost:8080"),")"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The API routes are registered in the ",(0,o.kt)("inlineCode",{parentName:"p"},"./src/routes")," directory.")))}m.isMDXComponent=!0}}]);