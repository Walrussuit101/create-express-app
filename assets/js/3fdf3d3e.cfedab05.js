"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[901],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9982:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),l=["components"],i={sidebar_label:"hello-world",sidebar_position:3},s="hello-world",p={unversionedId:"templates/hello-world",id:"templates/hello-world",title:"hello-world",description:"A template to quick start an express server without any specific functionality in mind (explore the code)",source:"@site/docs/templates/hello-world.md",sourceDirName:"templates",slug:"/templates/hello-world",permalink:"/create-express-app/docs/templates/hello-world",editUrl:"https://github.com/Walrussuit101/create-express-app/tree/master/docs/docs/templates/hello-world.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"hello-world",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"rest-api",permalink:"/create-express-app/docs/templates/rest-api"},next:{title:"--git",permalink:"/create-express-app/docs/options/git"}},c={},u=[{value:"Quick Start",id:"quick-start",level:2},{value:"Scripts",id:"scripts",level:2},{value:"start",id:"start",level:3},{value:"dev",id:"dev",level:3},{value:"Web Server",id:"web-server",level:2},{value:"GET /",id:"get-",level:3}],d={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hello-world"},(0,o.kt)("inlineCode",{parentName:"h1"},"hello-world")),(0,o.kt)("p",null,"A template to quick start an express server without any specific functionality in mind (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Walrussuit101/create-express-app/tree/master/templates/hello-world"},"explore the code"),")"),(0,o.kt)("h2",{id:"quick-start"},"Quick Start"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx @walrussuit/cea my-project hello-world --git\ncd my-project\nnpm start\n")),(0,o.kt)("h2",{id:"scripts"},"Scripts"),(0,o.kt)("p",null,"These are defined in ",(0,o.kt)("inlineCode",{parentName:"p"},"./package.json")),(0,o.kt)("h3",{id:"start"},"start"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm start\n")),(0,o.kt)("p",null,"This will start the API on localhost at port 8080 (unless you provide a ",(0,o.kt)("inlineCode",{parentName:"p"},"PORT")," environment variable)"),(0,o.kt)("h3",{id:"dev"},"dev"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm run dev\n")),(0,o.kt)("p",null,"This will re-start the server (using ",(0,o.kt)("a",{parentName:"p",href:"https://nodemon.io/"},"nodemon"),") on changes to any TypeScript or JSON file (hot-reloading)"),(0,o.kt)("h2",{id:"web-server"},"Web Server"),(0,o.kt)("p",null,"The web server's routes are registered in the ",(0,o.kt)("inlineCode",{parentName:"p"},"./src/index.ts")," file."),(0,o.kt)("h3",{id:"get-"},"GET /"),(0,o.kt)("p",null,"Returns a string containing ",(0,o.kt)("inlineCode",{parentName:"p"},"Hello World")))}m.isMDXComponent=!0}}]);